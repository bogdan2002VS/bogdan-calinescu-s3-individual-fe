{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bcali\\\\Desktop\\\\amd RYZEN 7\\\\individual FE\\\\src\\\\components\\\\forms\\\\LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, Link } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\nimport { useNavigate, Link as RouterLink } from \"react-router-dom\";\nimport { toastWarn } from \"./../../helpers/customToastify\";\nimport { forgotPassword, GoogleRegister, login } from \"./../../helpers/firebase\";\nimport GoogleIcon from \"@mui/icons-material/Google\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = _ref => {\n  _s();\n\n  let {\n    values,\n    handleChange,\n    errors,\n    touched,\n    handleBlur\n  } = _ref;\n  const navigate = useNavigate();\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    if (values.email && values.password) {\n      await login(values.email, values.password, navigate);\n    } else {\n      toastWarn(\"Please fill out all fields.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2 // sx={{ width: \"104%\" /* minHeight: \"18rem\" */ }}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email *\",\n            name: \"email\",\n            id: \"email\",\n            type: \"email\",\n            variant: \"outlined\",\n            value: values.email,\n            fullWidth: true,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            helperText: touched.email && errors.email,\n            error: touched.email && Boolean(errors.email)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password *\",\n            name: \"password\",\n            id: \"password\",\n            type: \"password\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: values.password,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            helperText: touched.password && errors.password,\n            error: touched.password && Boolean(errors.password)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          mb: 2\n        },\n        onClick: handleLogin,\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        className: \"google\",\n        onClick: () => {\n          GoogleRegister(navigate);\n        },\n        children: [/*#__PURE__*/_jsxDEV(GoogleIcon, {\n          sx: {\n            width: \"50px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), \"Sign in with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"flex-end\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"#\",\n          variant: \"body2\",\n          onClick: () => forgotPassword(values.email),\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          variant: \"body2\",\n          component: RouterLink,\n          children: \"Don't have an account? Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginForm, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["Button","Grid","Link","TextField","useNavigate","RouterLink","toastWarn","forgotPassword","GoogleRegister","login","GoogleIcon","LoginForm","values","handleChange","errors","touched","handleBlur","navigate","handleLogin","e","preventDefault","email","password","marginBottom","Boolean","mt","mb","width"],"sources":["C:/Users/bcali/Desktop/amd RYZEN 7/individual FE/src/components/forms/LoginForm.jsx"],"sourcesContent":["import { Button, Grid, Link } from \"@mui/material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useNavigate, Link as RouterLink } from \"react-router-dom\";\r\nimport { toastWarn } from \"./../../helpers/customToastify\";\r\nimport {\r\n  forgotPassword,\r\n  GoogleRegister,\r\n  login,\r\n} from \"./../../helpers/firebase\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\n\r\nconst LoginForm = ({ values, handleChange, errors, touched, handleBlur }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (values.email && values.password) {\r\n      await login(values.email, values.password, navigate);\r\n    } else {\r\n      toastWarn(\"Please fill out all fields.\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          // sx={{ width: \"104%\" /* minHeight: \"18rem\" */ }}\r\n        >\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"Email *\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              type=\"email\"\r\n              variant=\"outlined\"\r\n              value={values.email}\r\n              fullWidth\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              helperText={touched.email && errors.email}\r\n              error={touched.email && Boolean(errors.email)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"Password *\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              helperText={touched.password && errors.password}\r\n              error={touched.password && Boolean(errors.password)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          onClick={handleLogin}\r\n        >\r\n          LOGIN\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          fullWidth\r\n          className=\"google\"\r\n          onClick={() => {\r\n            GoogleRegister(navigate);\r\n          }}\r\n        >\r\n          <GoogleIcon sx={{ width: \"50px\" }} />\r\n          Sign in with Google\r\n        </Button>\r\n      </div>\r\n      <Grid container justifyContent=\"flex-end\">\r\n        <Grid item xs>\r\n          <Link\r\n            href=\"#\"\r\n            variant=\"body2\"\r\n            onClick={() => forgotPassword(values.email)}\r\n          >\r\n            Forgot password?\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link to=\"/register\" variant=\"body2\" component={RouterLink}>\r\n            {\"Don't have an account? Sign Up\"}\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}